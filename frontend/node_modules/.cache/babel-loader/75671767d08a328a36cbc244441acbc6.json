{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import axios from\"axios\";import'./styles.css';import UserService from'./UserService';import{useHistory}from'react-router-dom';// Importez useHistory pour v5\nconst TestHistory=()=>{const[history,setHistory]=useState([]);const[error,setError]=useState(\"\");const historyObj=useHistory();// Utilisez useHistory pour v5\nconst username=UserService.getCurrentUser();// Récupération de l'utilisateur actuel\nuseEffect(()=>{const fetchHistory=async()=>{const data={username:username};try{const response=await axios.get('http://192.168.0.167:8080/api/network-metrics/history',{params:{username:username}});console.log(\"Nom d'utilisateur actuel :\",username);console.log(\"Données reçues :\",response.data);// Afficher les données dans la console\nif(response.status===200){setHistory(response.data);}else{setError(\"Erreur : \".concat(response.status,\" \").concat(response.statusText));}}catch(error){console.error(\"Erreur détaillée :\",error.response||error.message||error);setError(\"Impossible de récupérer l'historique des tests.\");}};fetchHistory();},[username]);// Ajoutez username comme dépendance pour éviter les erreurs\nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Historique des Tests\"),error&&/*#__PURE__*/React.createElement(\"p\",{style:{color:\"red\"}},error),history.length===0?/*#__PURE__*/React.createElement(\"p\",null,\"Aucun test enregistr\\xE9 pour le moment.\"):/*#__PURE__*/React.createElement(\"table\",null,/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Date\"),/*#__PURE__*/React.createElement(\"th\",null,\"Latence (ms)\"),/*#__PURE__*/React.createElement(\"th\",null,\"D\\xE9bit (Mbps)\"),/*#__PURE__*/React.createElement(\"th\",null,\"Perte de paquets (%)\"))),/*#__PURE__*/React.createElement(\"tbody\",null,history.map((test,index)=>/*#__PURE__*/React.createElement(\"tr\",{key:index},/*#__PURE__*/React.createElement(\"td\",null,new Date(test.dateCreation).toLocaleString()),/*#__PURE__*/React.createElement(\"td\",null,test.latence),/*#__PURE__*/React.createElement(\"td\",null,test.debit),/*#__PURE__*/React.createElement(\"td\",null,test.packetlost))))),/*#__PURE__*/React.createElement(\"button\",{onClick:()=>historyObj.push('/')},\"Retour au Test\"),\" \");};export default TestHistory;","map":{"version":3,"names":["React","useEffect","useState","axios","UserService","useHistory","TestHistory","history","setHistory","error","setError","historyObj","username","getCurrentUser","fetchHistory","data","response","get","params","console","log","status","concat","statusText","message","createElement","className","style","color","length","map","test","index","key","Date","dateCreation","toLocaleString","latence","debit","packetlost","onClick","push"],"sources":["C:/Users/DELL/Net-Perf-Analyzer/frontend/src/components/TestHistory.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport './styles.css';\r\nimport UserService from './UserService';\r\nimport { useHistory } from 'react-router-dom'; // Importez useHistory pour v5\r\n\r\nconst TestHistory = () => {\r\n  const [history, setHistory] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const historyObj = useHistory(); // Utilisez useHistory pour v5\r\n  const username = UserService.getCurrentUser(); // Récupération de l'utilisateur actuel\r\n\r\n  useEffect(() => {\r\n    const fetchHistory = async () => {\r\n          const data = {\r\n            username: username\r\n          };\r\n      try {\r\n            const response = await axios.get('http://192.168.0.167:8080/api/network-metrics/history', {\r\n                params: { username: username }\r\n              });\r\n        console.log(\"Nom d'utilisateur actuel :\", username);\r\n        console.log(\"Données reçues :\", response.data); // Afficher les données dans la console\r\n\r\n        if (response.status === 200) {\r\n          setHistory(response.data);\r\n        } else {\r\n          setError(`Erreur : ${response.status} ${response.statusText}`);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Erreur détaillée :\", error.response || error.message || error);\r\n        setError(\"Impossible de récupérer l'historique des tests.\");\r\n      }\r\n    };\r\n\r\n    fetchHistory();\r\n  }, [username]); // Ajoutez username comme dépendance pour éviter les erreurs\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h3>Historique des Tests</h3>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      {history.length === 0 ? (\r\n        <p>Aucun test enregistré pour le moment.</p>\r\n      ) : (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th>Latence (ms)</th>\r\n              <th>Débit (Mbps)</th>\r\n              <th>Perte de paquets (%)</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {history.map((test, index) => (\r\n              <tr key={index}>\r\n                <td>{new Date(test.dateCreation).toLocaleString()}</td>\r\n                <td>{test.latence}</td>\r\n                <td>{test.debit}</td>\r\n                <td>{test.packetlost}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n      <button onClick={() => historyObj.push('/')}>Retour au Test</button> {/* Utilisation de history.push() pour la navigation */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestHistory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}