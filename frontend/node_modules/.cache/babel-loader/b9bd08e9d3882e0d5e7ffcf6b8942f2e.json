{"ast":null,"code":"import React,{Component}from\"react\";import{Redirect}from'react-router-dom';import Form from\"react-validation/build/form\";import Input from\"react-validation/build/input\";import CheckButton from\"react-validation/build/button\";import{connect}from\"react-redux\";import{login}from\"../actions/auth\";const required=value=>{if(!value){return/*#__PURE__*/React.createElement(\"div\",{className:\"alert alert-danger\",role:\"alert\"},\"This field is required!\");}};class Login extends Component{constructor(props){super(props);this.handleLogin=this.handleLogin.bind(this);this.onChangeUsername=this.onChangeUsername.bind(this);this.onChangePassword=this.onChangePassword.bind(this);this.state={username:\"\",password:\"\",loading:false};}onChangeUsername(e){this.setState({username:e.target.value});}onChangePassword(e){this.setState({password:e.target.value});}handleLogin(e){e.preventDefault();this.setState({loading:true});this.form.validateAll();const{dispatch,history}=this.props;if(this.checkBtn.context._errors.length===0){dispatch(login(this.state.username,this.state.password)).then(()=>{history.push(\"/profile\");window.location.reload();}).catch(()=>{this.setState({loading:false});});}else{this.setState({loading:false});}}render(){const{isLoggedIn,message}=this.props;if(isLoggedIn){return/*#__PURE__*/React.createElement(Redirect,{to:\"/profile\"});}return/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-12\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card bg-light text-dark\"},/*#__PURE__*/React.createElement(\"h1\",null,/*#__PURE__*/React.createElement(\"center\",null,\"Login\")),/*#__PURE__*/React.createElement(Form,{onSubmit:this.handleLogin,ref:c=>{this.form=c;}},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"username\"},\"Username\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",className:\"form-control\",name:\"username\",value:this.state.username,onChange:this.onChangeUsername,validations:[required]})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"password\"},\"Password\"),/*#__PURE__*/React.createElement(Input,{type:\"password\",className:\"form-control\",name:\"password\",value:this.state.password,onChange:this.onChangePassword,validations:[required]})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-dark btn-block\",disabled:this.state.loading},this.state.loading&&/*#__PURE__*/React.createElement(\"span\",{className:\"spinner-border spinner-border-sm\"}),/*#__PURE__*/React.createElement(\"span\",null,\"Login\"))),message&&/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"div\",{className:\"alert alert-danger\",role:\"alert\"},message)),/*#__PURE__*/React.createElement(CheckButton,{style:{display:\"none\"},ref:c=>{this.checkBtn=c;}}))));}}function mapStateToProps(state){const{isLoggedIn}=state.auth;const{message}=state.message;return{isLoggedIn,message};}export default connect(mapStateToProps)(Login);","map":{"version":3,"names":["React","Component","Redirect","Form","Input","CheckButton","connect","login","required","value","createElement","className","role","Login","constructor","props","handleLogin","bind","onChangeUsername","onChangePassword","state","username","password","loading","e","setState","target","preventDefault","form","validateAll","dispatch","history","checkBtn","context","_errors","length","then","push","window","location","reload","catch","render","isLoggedIn","message","to","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","mapStateToProps","auth"],"sources":["C:/Users/DELL/Net-Perf-Analyzer/frontend/src/components/login.component.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    const { dispatch, history } = this.props;\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      dispatch(login(this.state.username, this.state.password))\r\n        .then(() => {\r\n          history.push(\"/profile\");\r\n          window.location.reload();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            loading: false\r\n          });\r\n        });\r\n    } else {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n\r\n    if (isLoggedIn) {\r\n      return <Redirect to=\"/profile\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card bg-light text-dark\">\r\n          <h1><center>Login</center></h1>\r\n\r\n\r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btn btn-dark btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Login</span>\r\n              </button>\r\n            </div>\r\n\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={(c) => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    message\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}