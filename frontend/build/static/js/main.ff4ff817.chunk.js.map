{"version":3,"sources":["actions/types.js","reducers/auth.js","reducers/message.js","reducers/index.js","store.js","services/auth.service.js","actions/auth.js","components/login.component.js","components/register.component.js","components/profile.component.js","services/auth-header.js","services/user.service.js","common/EventBus.js","components/user.component.js","components/UserService.js","components/NetworkTest.js","components/TestHistory.js","App.js","serviceWorker.js","index.js"],"names":["user","JSON","parse","localStorage","getItem","initialState","isLoggedIn","combineReducers","auth","state","arguments","length","undefined","action","type","payload","_objectSpread","message","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","API_URL","login","username","password","axios","post","then","response","data","accessToken","setItem","stringify","logout","removeItem","register","email","required","value","React","createElement","className","role","Login","Component","constructor","props","super","this","handleLogin","bind","onChangeUsername","onChangePassword","loading","e","setState","target","preventDefault","form","validateAll","dispatch","history","checkBtn","context","_errors","AuthService","Promise","resolve","error","toString","reject","push","window","location","reload","catch","render","Redirect","to","Form","onSubmit","ref","c","htmlFor","Input","name","onChange","validations","disabled","CheckButton","style","display","connect","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","Profile","currentUser","class","id","href","authHeader","Authorization","getPublicContent","get","getGreetings","headers","eventBus","on","event","callback","document","addEventListener","detail","dispatchEvent","CustomEvent","remove","removeEventListener","User","content","componentDidMount","UserService","status","EventBus","getCurrentUser","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","NetworkTest","latency","setLatency","useState","packetLoss","setPacketLoss","isTesting","setIsTesting","socket","setSocket","setError","latencyData","setLatencyData","timeStamps","setTimeStamps","bandwidth","setBandwidth","bandwidthData","setBandwidthData","averageBandwidth","setAverageBandwidth","latencySocket","setLatencySocket","useEffect","close","console","log","calculateAverageLatency","reduce","acc","toFixed","startLatencyTest","newLatencySocket","WebSocket","onopen","onmessage","trim","startsWith","newLatency","parseFloat","split","prevData","updatedData","slice","newPacketLoss","timestamp","Date","toLocaleTimeString","prevTimestamps","updatedTimestamps","onclose","onerror","startBandwidthTest","newSocket","totalDataReceived","startTime","performance","now","dataSize","currentTime","bandwidthMbps","average","calculateAverageBandwidth","chartDataLatency","labels","datasets","label","borderColor","backgroundColor","fill","tension","pointRadius","pointBackgroundColor","borderWidth","pointHoverRadius","chartData","scales","x","title","text","color","grid","y","chartOptions","responsive","maintainAspectRatio","plugins","legend","tooltip","enabled","onClick","startTests","stopTests","averageLatency","async","metrics","latence","debit","packetlost","performanceData","alert","saveMetrics","flexDirection","justifyContent","flexGrow","alignItems","gap","height","width","Line","options","marginTop","paddingBottom","pdf","jsPDF","currentY","testDate","toLocaleString","setFontSize","concat","endTime","maxLatency","Math","max","minLatency","min","maxBandwidth","minBandwidth","setTextColor","join","latencyGraph","getElementById","bandwidthGraph","latencyImg","html2canvas","scale","scrollWidth","scrollHeight","toDataURL","addImage","addPage","bandwidthImg","save","TestHistory","setHistory","historyObj","useHistory","params","statusText","fetchHistory","map","test","index","key","dateCreation","App","logOut","componentWillUnmount","Router","Link","Switch","Route","exact","path","component","Boolean","hostname","match","ReactDOM","Provider","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ff4ff817.chunk.js","sourcesContent":["export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from \"../actions/types\";\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\nconst initialState = user\r\n  ? { isLoggedIn: true, user }\r\n  : { isLoggedIn: false, user: null };\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: payload.user,\r\n      };\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport message from \"./message\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  message,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\n\r\nconst API_URL = \"http://192.168.22.56:8080/api/auth/\";\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", { username, password })\r\n      .then((response) => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(username, email, password) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      username,\r\n      email,\r\n      password,\r\n    });\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  SET_MESSAGE,\r\n} from \"./types\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport const register = (username, email, password) => (dispatch) => {\r\n  return AuthService.register(username, email, password).then(\r\n    (response) => {\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: response.data.message,\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const login = (username, password) => (dispatch) => {\r\n  return AuthService.login(username, password).then(\r\n    (data) => {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: { user: data },\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  AuthService.logout();\r\n\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    const { dispatch, history } = this.props;\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      dispatch(login(this.state.username, this.state.password))\r\n        .then(() => {\r\n          history.push(\"/profile\");\r\n          window.location.reload();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            loading: false\r\n          });\r\n        });\r\n    } else {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n\r\n    if (isLoggedIn) {\r\n      return <Redirect to=\"/profile\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card bg-light text-dark\">\r\n          <h1><center>Login</center></h1>\r\n\r\n\r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btn btn-dark btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Login</span>\r\n              </button>\r\n            </div>\r\n\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={(c) => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    message\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { register } from \"../actions/auth\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = (value) => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = (value) => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      successful: false,\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      successful: false,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      this.props\r\n        .dispatch(\r\n          register(this.state.username, this.state.email, this.state.password)\r\n        )\r\n        .then(() => {\r\n          this.setState({\r\n            successful: true,\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            successful: false,\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { message } = this.props;\r\n\r\n    return (\r\n\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card bg-light text-dark\">\r\n\r\n          <h1><center>User Registration </center></h1>\r\n\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-dark btn-block\">Sign Up</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div className={this.state.successful ? \"alert alert-success\" : \"alert alert-danger\"} role=\"alert\">\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={(c) => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { message } = state.message;\r\n  return {\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Register);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Profile extends Component {\r\n\r\n \r\n  render() {\r\n\r\n    const { user: currentUser } = this.props;\r\n\r\n    if (!currentUser) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n\r\n    return (\r\n      <div class=\"card bg-light text-dark\">\r\n        <h1>{currentUser.username}</h1>\r\n        <p>\r\n          <strong>Id:</strong> {currentUser.id}\r\n        </p>\r\n        <p>\r\n          <strong>Email:</strong> {currentUser.email}\r\n        </p>\r\n        <a href=\"#\"><i class=\"fa fa-dribbble\"></i></a>\r\n        <a href=\"#\"><i class=\"fa fa-twitter\"></i></a>\r\n        <a href=\"#\"><i class=\"fa fa-linkedin\"></i></a>\r\n        <a href=\"#\"><i class=\"fa fa-facebook\"></i></a>\r\n          </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { user } = state.auth;\r\n  return {\r\n    user,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Profile);","export default function authHeader() {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  if (user && user.accessToken) {\r\n       return { Authorization: \"Bearer \" + user.accessToken };\r\n\r\n    \r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst API_URL = \"http://192.168.22.56:8080/api/test/\";\r\n\r\nclass UserService {\r\n  getPublicContent() {\r\n    return axios.get(API_URL + \"all\");\r\n  }\r\n\r\n  getGreetings() {\r\n    return axios.get(API_URL + \"greeting\", { headers: authHeader() });\r\n  }\r\n  \r\n}\r\n\r\nexport default new UserService();\r\n","const eventBus = {\r\n  on(event, callback) {\r\n    document.addEventListener(event, (e) => callback(e.detail));\r\n  },\r\n  dispatch(event, data) {\r\n    document.dispatchEvent(new CustomEvent(event, { detail: data }));\r\n  },\r\n  remove(event, callback) {\r\n    document.removeEventListener(event, callback);\r\n  },\r\n};\r\n\r\nexport default eventBus;\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\nimport EventBus from \"../common/EventBus\";\r\n\r\nexport default class User extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getGreetings().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data.message\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n\r\n        if (error.response && error.response.status === 401) {\r\n          EventBus.dispatch(\"logout\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n\r\n        <div class=\"card bg-light text-dark\">\r\n        <h3>{this.state.content}</h3>\r\n        <a href=\"#\"><i class=\"fa fa-dribbble\"></i></a>\r\n        <a href=\"#\"><i class=\"fa fa-twitter\"></i></a>\r\n        <a href=\"#\"><i class=\"fa fa-linkedin\"></i></a>\r\n        <a href=\"#\"><i class=\"fa fa-facebook\"></i></a>\r\n          </div>\r\n     \r\n    );\r\n  }\r\n}","class UserService {\r\n  getCurrentUser() {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    return user ? user.username : null; // Retourne le username ou null\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport html2canvas from \"html2canvas\";\r\nimport './NetworkTest.css';\r\nimport UserService from './UserService';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\n\r\n// Enregistrer les composants nécessaires de Chart.js\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\nconst NetworkTest = () => {\r\n  const [latency, setLatency] = useState(null);\r\n  const [packetLoss, setPacketLoss] = useState(0);\r\n  const [isTesting, setIsTesting] = useState(false);\r\n  const [socket, setSocket] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [latencyData, setLatencyData] = useState([]);\r\n  const [timeStamps, setTimeStamps] = useState([]);\r\n  const [bandwidth, setBandwidth] = useState(null);\r\n  const [bandwidthData, setBandwidthData] = useState([]);\r\n  const [averageBandwidth, setAverageBandwidth] = useState(0);\r\n  const [latencySocket, setLatencySocket] = useState(null);\r\n  const maxDataPoints = 30;\r\n const username = UserService.getCurrentUser();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (socket) {\r\n        socket.close();\r\n        console.log('WebSocket déconnecté');\r\n      }\r\n    };\r\n  }, [socket]);\r\n\r\n  const startTests = () => {\r\n    setIsTesting(true);\r\n    startLatencyTest();\r\n    startBandwidthTest();\r\n  };\r\n\r\n  const calculateAverageLatency = () => {\r\n    if (latencyData.length === 0) return 0;\r\n    const sum = latencyData.reduce((acc, value) => acc + value, 0);\r\n    return (sum / latencyData.length).toFixed(2);\r\n  };\r\n\r\n  const calculateAverageBandwidth = (data) => {\r\n    if (data.length === 0) return 0;\r\n    const sum = data.reduce((acc, value) => acc + value, 0);\r\n    return (sum / data.length).toFixed(2);\r\n  };\r\n\r\n  const saveMetrics = async (averageLatency) => {\r\n\r\n  console.log(\"Nom d'utilisateur actuel :\", username);\r\n    try {\r\n      const metrics = {\r\n        latence: parseFloat(averageLatency),\r\n        debit: parseFloat(averageBandwidth),\r\n        packetlost: packetLoss,\r\n      };\r\n      const data = {\r\n        username: username, // ou un autre moyen d'obtenir le username\r\n        performanceData: metrics\r\n      };\r\n\r\n      const response = await axios.post('http://192.168.22.56:8080/api/network-metrics/save',data);\r\n      console.log(response.data);\r\n      alert('Les métriques ont été sauvegardées avec succès.');\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la sauvegarde des métriques :\", error);\r\n      alert('Erreur lors de la sauvegarde des métriques.');\r\n    }\r\n  };\r\n\r\n  const startLatencyTest = () => {\r\n    if (isTesting) {\r\n      setError('Le test de latence est déjà en cours.');\r\n      return;\r\n    }\r\n    setError('');\r\n    setIsTesting(true);\r\n\r\n    const newLatencySocket = new WebSocket(\"ws://192.168.0.167:8080/ws/latency\");\r\n\r\n    newLatencySocket.onopen = () => {\r\n      console.log('WebSocket de latence connecté');\r\n      setLatency('Connexion établie. En attente de la latence...');\r\n    };\r\n\r\n    newLatencySocket.onmessage = (event) => {\r\n      const message = event.data.trim();\r\n      console.log('Message reçu : ', message);\r\n\r\n      if (message.startsWith('Latence:')) {\r\n        const newLatency = parseFloat(message.split(':')[1].trim());\r\n        setLatency(newLatency);\r\n        setLatencyData(prevData => {\r\n          const updatedData = [...prevData, newLatency];\r\n          return updatedData.length > maxDataPoints ? updatedData.slice(1) : updatedData;\r\n        });\r\n      }\r\n\r\n      if (message.startsWith('Perte de paquets:')) {\r\n        const newPacketLoss = parseFloat(message.split(':')[1].trim());\r\n        setPacketLoss(newPacketLoss);\r\n      }\r\n\r\n      const timestamp = new Date().toLocaleTimeString();\r\n      setTimeStamps(prevTimestamps => {\r\n        const updatedTimestamps = [...prevTimestamps, timestamp];\r\n        return updatedTimestamps.length > maxDataPoints ? updatedTimestamps.slice(1) : updatedTimestamps;\r\n      });\r\n    };\r\n\r\n    newLatencySocket.onclose = () => {\r\n      console.log('WebSocket de latence déconnecté');\r\n      setIsTesting(false);\r\n    };\r\n\r\n    newLatencySocket.onerror = (error) => {\r\n      console.error('Erreur WebSocket de latence :', error);\r\n      setError('Erreur WebSocket : Vérifiez votre connexion.');\r\n      setIsTesting(false);\r\n    };\r\n\r\n    setLatencySocket(newLatencySocket);\r\n  };\r\n\r\n  const startBandwidthTest = () => {\r\n    if (isTesting) {\r\n      setError(\"Le test de débit est déjà en cours.\");\r\n      return;\r\n    }\r\n\r\n    setError(\"\");\r\n    setIsTesting(true);\r\n    const newSocket = new WebSocket(\"ws://192.168.22.56:8080/ws/bandwidth\");\r\n    setSocket(newSocket);\r\n\r\n    let totalDataReceived = 0;\r\n    let startTime = performance.now();\r\n\r\n    newSocket.onopen = () => {\r\n      console.log(\"WebSocket connecté\");\r\n      totalDataReceived = 0;\r\n      startTime = performance.now();\r\n    };\r\n\r\n    newSocket.onmessage = (event) => {\r\n      const dataSize = event.data.length;\r\n      totalDataReceived += dataSize;\r\n\r\n      const currentTime = performance.now();\r\n      const elapsedTimeInSeconds = (currentTime - startTime) / 1000;\r\n\r\n      const bandwidthMbps =\r\n        (totalDataReceived * 8) / (elapsedTimeInSeconds * 1024 * 1024);\r\n      setBandwidth(bandwidthMbps.toFixed(2));\r\n\r\n      const timestamp = new Date().toLocaleTimeString();\r\n      setBandwidthData((prevData) => {\r\n        const updatedData = [...prevData, parseFloat(bandwidthMbps.toFixed(2))];\r\n        const average = calculateAverageBandwidth(updatedData);\r\n        setAverageBandwidth(average);\r\n        return updatedData.length > maxDataPoints\r\n          ? updatedData.slice(1)\r\n          : updatedData;\r\n      });\r\n      setTimeStamps((prevTimestamps) => {\r\n        const updatedTimestamps = [...prevTimestamps, timestamp];\r\n        return updatedTimestamps.length > maxDataPoints\r\n          ? updatedTimestamps.slice(1)\r\n          : updatedTimestamps;\r\n      });\r\n    };\r\n\r\n    newSocket.onclose = () => {\r\n      console.log(\"WebSocket déconnecté\");\r\n      setIsTesting(false);\r\n    };\r\n\r\n    newSocket.onerror = (error) => {\r\n      console.error(\"Erreur WebSocket :\", error);\r\n      setError(\"Erreur WebSocket : Vérifiez votre connexion.\");\r\n      setIsTesting(false);\r\n    };\r\n  };\r\n\r\n  const stopTests = () => {\r\n    if (socket) {\r\n      socket.close();\r\n      console.log(\"Tests arrêtés.\");\r\n      setIsTesting(false);\r\n    }\r\n    if (latencySocket) {\r\n      latencySocket.close();\r\n      console.log(\"Test de latence arrêté.\");\r\n      setIsTesting(false);\r\n    }\r\n\r\n    const averageLatency = calculateAverageLatency();\r\n    console.log(\"Latence moyenne :\", averageLatency);\r\n    saveMetrics(averageLatency);\r\n  };\r\n\r\n  const chartDataLatency = {\r\n    labels: timeStamps,\r\n    datasets: [\r\n      {\r\n        label: 'Latence (ms)',\r\n        data: latencyData,\r\n        borderColor: 'rgba(255, 105, 180, 1)', // Couleur de la courbe\r\n        backgroundColor: 'rgba(255, 105, 180, 0.2)', // Couleur du fond léger\r\n        fill: true, // Remplissage sous la courbe\r\n        tension: 0.4, // Rendre la courbe plus fluide\r\n        pointRadius: 5, // Taille des points\r\n        pointBackgroundColor: 'rgba(255, 105, 180, 1)', // Couleur des points\r\n        borderWidth: 3, // Épaisseur de la ligne\r\n        pointHoverRadius: 8, // Taille du point au survol\r\n      },\r\n    ],\r\n  };\r\n\r\n const chartData = {\r\n   labels: timeStamps,\r\n   datasets: [\r\n     {\r\n       label: \"Débit (Mbps)\",\r\n       data: bandwidthData,\r\n       borderColor: \"rgba(0, 0, 128, 1)\", // Couleur bleu marine pour la courbe\r\n       backgroundColor: \"rgba(0, 0, 128, 0.2)\", // Fond léger bleu marine\r\n       fill: true, // Remplissage sous la courbe\r\n       tension: 0.4, // Rendre la courbe plus fluide\r\n       pointRadius: 5, // Taille des points\r\n       pointBackgroundColor: 'rgba(0, 0, 128, 1)', // Couleur bleu marine des points\r\n       borderWidth: 2, // Épaisseur de la ligne\r\n       pointHoverRadius: 8, // Taille du point au survol\r\n     },\r\n   ],\r\n\r\n    scales: {\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: 'Temps',\r\n          color: '#000',\r\n        },\r\n        grid: {\r\n          color: '#e1e1e1', // Couleur des lignes de grille\r\n        },\r\n      },\r\n      y: {\r\n        title: {\r\n          display: true,\r\n          text: 'Valeur',\r\n          color: '#000',\r\n        },\r\n        grid: {\r\n          color: '#e1e1e1', // Couleur des lignes de grille\r\n        },\r\n      },\r\n    },\r\n\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n      },\r\n      tooltip: {\r\n        enabled: true,\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        title: {\r\n          display: false,\r\n          text: \"Temps\",\r\n        },\r\n      },\r\n      y: {\r\n        title: {\r\n          display: true,\r\n\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n const generateReport = async () => {\r\n    const pdf = new jsPDF(\"p\", \"mm\", \"a4\");\r\n    let currentY = 10; // Position Y de départ\r\n\r\n    // Récupérer la date actuelle du test\r\n    const testDate = new Date().toLocaleString();  // Format local de la date et heure\r\n\r\n    // Ajouter un titre\r\n    pdf.setFontSize(18);\r\n    pdf.text(\"Rapport de Test Réseau\", 10, currentY);\r\n    currentY += 15; // Augmenter l'espacement après le titre\r\n\r\n    // Ajouter la date du test\r\n    pdf.setFontSize(12);\r\n    pdf.text(`Date du test : ${testDate}`, 10, currentY);\r\n    currentY += 10; // Espacement après la date\r\n\r\n    // Détails des tests\r\n    const startTime = timeStamps[0] || \"N/A\";\r\n    const endTime = timeStamps[timeStamps.length - 1] || \"N/A\";\r\n    const maxLatency = latencyData.length ? Math.max(...latencyData) : \"N/A\";\r\n    const minLatency = latencyData.length ? Math.min(...latencyData) : \"N/A\";\r\n    const maxBandwidth = bandwidthData.length ? Math.max(...bandwidthData) : \"N/A\";\r\n    const minBandwidth = bandwidthData.length ? Math.min(...bandwidthData) : \"N/A\";\r\n\r\n    pdf.text(`Durée du test : ${startTime} - ${endTime}`, 10, currentY);\r\n    currentY += 10;\r\n    pdf.text(`Latence moyenne : ${calculateAverageLatency()} ms`, 10, currentY);\r\n    currentY += 10;\r\n    pdf.text(`Latence maximale : ${maxLatency} ms`, 10, currentY);\r\n    currentY += 10;\r\n    pdf.text(`Latence minimale : ${minLatency} ms`, 10, currentY);\r\n    currentY += 10;\r\n    pdf.text(`Débit moyen : ${averageBandwidth} Mbps`, 10, currentY);\r\n    currentY += 10;\r\n    pdf.text(`Débit maximal : ${maxBandwidth} Mbps`, 10, currentY);\r\n    currentY += 10;\r\n    pdf.text(`Débit minimal : ${minBandwidth} Mbps`, 10, currentY);\r\n    currentY += 10;\r\n    pdf.text(`Perte de paquets : ${packetLoss}%`, 10, currentY);\r\n    currentY += 15; // Plus d'espace avant la section des détails\r\n\r\n    // Section Détails des Tests\r\n    pdf.setFontSize(12);\r\n    pdf.setTextColor(0, 102, 204);\r\n    pdf.text(\"Détails des Tests:\", 14, currentY);\r\n    currentY += 10; // Espacement après le titre de section\r\n\r\n    pdf.setFontSize(12);\r\n    pdf.setTextColor(50, 50, 50);\r\n    pdf.text(`Latence (ms): ${latencyData.join(\", \")}`, 10, currentY);\r\n    currentY += 10;\r\n    pdf.text(`Débit (Mbps): ${bandwidthData.join(\", \")}`, 10, currentY);\r\n    currentY += 8; // Espacement avant d'ajouter les graphiques\r\n\r\n    // Ajouter les graphiques\r\n    const latencyGraph = document.getElementById(\"latencyGraph\");\r\n    const bandwidthGraph = document.getElementById(\"bandwidthGraph\");\r\n\r\n    if (latencyGraph) {\r\n\r\n      const latencyCanvas = await html2canvas(latencyGraph, {\r\n        scale: 2, // Augmente la qualité de la capture\r\n        width: latencyGraph.scrollWidth, // Capture la largeur complète\r\n        height: latencyGraph.scrollHeight // Capture la hauteur complète\r\n      });\r\n      const latencyImg = latencyCanvas.toDataURL(\"image/png\");\r\n      pdf.addImage(latencyImg, \"PNG\", 10,currentY  , 190, 80); // Ajuster la taille d'image si nécessaire\r\n      currentY += 85; // Ajuster l'espacement après le graphique de latence\r\n    }\r\n\r\n    if (bandwidthGraph) {\r\n      pdf.addPage();\r\n      const bandwidthCanvas = await html2canvas(bandwidthGraph, {\r\n        scale: 2, // Augmente la qualité de la capture\r\n        width: bandwidthGraph.scrollWidth, // Capture la largeur complète\r\n        height: bandwidthGraph.scrollHeight // Capture la hauteur complète\r\n      });\r\n      const bandwidthImg = bandwidthCanvas.toDataURL(\"image/png\");\r\n      pdf.addImage(bandwidthImg, \"PNG\", 10, 10, 190, 80); // Ajuster la taille d'image si nécessaire\r\n    }\r\n\r\n    // Télécharger le fichier PDF\r\n    pdf.save(\"rapport-test-reseau.pdf\");\r\n };\r\n\r\n\r\n   return (\r\n<div>\r\n  <h2>Test de Performance Réseau</h2>\r\n  <div className=\"button-container\">\r\n    <button className=\"start\" onClick={startTests}>Go</button>\r\n    <button className=\"stop\" onClick={stopTests}>Stop</button>\r\n  </div>\r\n\r\n  <p>Latence : {latency}</p>\r\n  <p>Latence moyenne : {calculateAverageLatency()}</p>\r\n  <p>Perte de paquets : {packetLoss}%</p>\r\n  <p>Débit : {bandwidth}</p>\r\n  <p>Débit moyen : {averageBandwidth}</p>\r\n\r\n  {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n<div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'flex-start', flexGrow: 1 }}>\r\n  <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', gap: '80px' }}>\r\n    <div id=\"latencyGraph\" style={{ height: \"300px\", width: \"80%\" }}>\r\n      <h3 style={{ color: '#D5006D' }}>Graphique de la Latence</h3>\r\n      <Line data={chartDataLatency} options={chartOptions} />\r\n    </div>\r\n\r\n    <div id=\"bandwidthGraph\" style={{ height: \"300px\", width: \"80%\" }}>\r\n      <h3 style={{ color: '#003366' }}>Graphique du Débit</h3>\r\n      <Line data={chartData} options={chartOptions} />\r\n    </div>\r\n\r\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', marginTop: 'auto', paddingBottom: '20px' }}>\r\n      <button onClick={generateReport}>Générer un rapport</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n\r\n\r\n     );\r\n };\r\n\r\n export default NetworkTest;","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport './styles.css';\r\nimport UserService from './UserService';\r\nimport { useHistory } from 'react-router-dom'; // Importez useHistory pour v5\r\n\r\nconst TestHistory = () => {\r\n  const [history, setHistory] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const historyObj = useHistory(); // Utilisez useHistory pour v5\r\n  const username = UserService.getCurrentUser(); // Récupération de l'utilisateur actuel\r\n\r\n  useEffect(() => {\r\n    const fetchHistory = async () => {\r\n          const data = {\r\n            username: username\r\n          };\r\n      try {\r\n            const response = await axios.get('http://192.168.0.167:8080/api/network-metrics/history', {\r\n                params: { username: username }\r\n              });\r\n        console.log(\"Nom d'utilisateur actuel :\", username);\r\n        console.log(\"Données reçues :\", response.data); // Afficher les données dans la console\r\n\r\n        if (response.status === 200) {\r\n          setHistory(response.data);\r\n        } else {\r\n          setError(`Erreur : ${response.status} ${response.statusText}`);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Erreur détaillée :\", error.response || error.message || error);\r\n        setError(\"Impossible de récupérer l'historique des tests.\");\r\n      }\r\n    };\r\n\r\n    fetchHistory();\r\n  }, [username]); // Ajoutez username comme dépendance pour éviter les erreurs\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h3>Historique des Tests</h3>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      {history.length === 0 ? (\r\n        <p>Aucun test enregistré pour le moment.</p>\r\n      ) : (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th>Latence (ms)</th>\r\n              <th>Débit (Mbps)</th>\r\n              <th>Perte de paquets (%)</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {history.map((test, index) => (\r\n              <tr key={index}>\r\n                <td>{new Date(test.dateCreation).toLocaleString()}</td>\r\n                <td>{test.latence}</td>\r\n                <td>{test.debit}</td>\r\n                <td>{test.packetlost}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n      <button onClick={() => historyObj.push('/')}>Retour au Test</button> {/* Utilisation de history.push() pour la navigation */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestHistory;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport Login from \"./components/login.component\";\r\nimport Register from \"./components/register.component\";\r\nimport Profile from \"./components/profile.component\";\r\nimport User from \"./components/user.component\";\r\nimport NetworkTest from \"./components/NetworkTest\";\r\nimport TestHistory from \"./components/TestHistory\";\r\nimport { logout } from \"./actions/auth\";\r\nimport { clearMessage } from \"./actions/message\";\r\nimport EventBus from \"./common/EventBus\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      currentUser: undefined,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = this.props.user;\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n      });\r\n    }\r\n\r\n    EventBus.on(\"logout\", () => {\r\n      this.logOut();\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    EventBus.remove(\"logout\");\r\n  }\r\n\r\n  logOut() {\r\n    this.props.dispatch(logout());\r\n    this.setState({\r\n      currentUser: undefined,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { currentUser } = this.state;\r\n\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n            <Link to={\"/\"} className=\"navbar-brand\">\r\n              NetPerfAnalyzer\r\n            </Link>\r\n            <div className=\"navbar-nav mr-auto\">\r\n              {currentUser && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/user\"} className=\"nav-link\">\r\n                    Resource\r\n                  </Link>\r\n                </li>\r\n              )}\r\n            </div>\r\n\r\n            {currentUser ? (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/profile\"} className=\"nav-link\">\r\n                    Profile\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/network-test\"} className=\"nav-link\">\r\n                    Network Test\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/test-history\"} className=\"nav-link\">\r\n                    Test History\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/login\" className=\"nav-link\" onClick={this.logOut}>\r\n                    LogOut\r\n                  </Link>\r\n                </li>\r\n              </div>\r\n            ) : (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/login\"} className=\"nav-link\">\r\n                    Login\r\n                  </Link>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/register\"} className=\"nav-link\">\r\n                    Sign Up\r\n                  </Link>\r\n                </li>\r\n              </div>\r\n            )}\r\n          </nav>\r\n\r\n          <div className=\"container mt-3\">\r\n            <Switch>\r\n              <Route exact path={[\"/\", \"/register\"]} component={Register} />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Route exact path=\"/register\" component={Register} />\r\n              <Route exact path=\"/profile\" component={Profile} />\r\n              <Route exact path=\"/user\" component={User} />\r\n              <Route exact path=\"/network-test\" component={NetworkTest} />\r\n              <Route exact path=\"/test-history\" component={TestHistory} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { user } = state.auth;\r\n  return {\r\n    user,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}